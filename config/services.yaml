parameters:
    locale: 'en'

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: true
    bind:
      $queryBus:   '@messenger.bus.query'
      $commandBus: '@messenger.bus.command'
      $eventBus: '@messenger.bus.events'
      $passwordEncoder: '@security.password_encoder'

  # ┌─────────────────────────┐
  # │ Application services    │
  # └─────────────────────────┘
  Core\Application\Exchange\ExchangeDtoAssembler: ~
  Core\Application\Order\OrderDtoAssembler: ~
  Core\Application\Credentials\CredentialsDtoAssembler: ~

  # ┌─────────────────────────┐
  # │ Domain services         │
  # └─────────────────────────┘
  Core\Domain\Event\EventStore: '@Core\Infrastructure\Persistence\Repository\DoctrineEventStore'
  Core\Domain\User\UserFactory: '@Core\Infrastructure\Factory\UserFactory'
  Core\Domain\User\UserRepository: '@Core\Infrastructure\Persistence\Repository\DoctrineUserRepository'
  Core\Domain\Exchange\ExchangeRepository: '@Core\Infrastructure\Persistence\Repository\DoctrineExchangeRepository'
  Core\Domain\Order\OrderRepository: '@Core\Infrastructure\Persistence\Repository\DoctrineOrderRepository'
  Core\Domain\Credentials\CredentialsRepository: '@Core\Infrastructure\Persistence\Repository\DoctrineCredentialsRepository'

  # ┌─────────────────────────┐
  # │ Infrastructure services │
  # └─────────────────────────┘
  Core\Infrastructure\Persistence\Repository\:
    resource: '../src/Core/Infrastructure/Persistence/Repository'

  Core\Infrastructure\Factory\UserFactory: ~

  Core\Infrastructure\Messaging\CommandBus\DomainEventsMiddleware: ~

  Core\Infrastructure\EventListener\ExceptionListener:
    tags: [{ name: kernel.event_listener, event: kernel.exception }]

  Core\Infrastructure\Security\JwtEventListener:
    tags: [{ name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: handle  }]

  Core\Infrastructure\EventListener\AggregateRootEventRecorder:
    tags:
      - { name: doctrine.event_listener, event: postPersist }
      - { name: doctrine.event_listener, event: postUpdate }
      - { name: doctrine.event_listener, event: postRemove }

  Core\Infrastructure\Security\CryptoService:
    arguments:
      $publicKey: '%env(CRYPTO_PUBLIC_KEY)%'
      $secretKey: '%env(CRYPTO_SECRET_KEY)%'

  # ┌─────────────────────────┐
  # │ UI services             │
  # └─────────────────────────┘
  Core\Ui\Http\:
    resource: '../src/Core/Ui/Http'
    exclude: '../src/Core/Ui/Http/{Exception}'
    tags: ['controller.service_arguments']
